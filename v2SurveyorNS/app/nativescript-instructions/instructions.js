"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var platform = require("platform");
var isStart = false;
var isEleAbove0 = false;
var isPressed = false;
var largeDeltaAz = false;
var oldAz = 0;
var page;
var pt1, pt2, pt3, pt4, pt5;
var currentView;
var translateY = platform.screen.mainScreen.heightPixels / 8 / platform.screen.mainScreen.scale;
function trigger1(mPage) {
    if (!isStart) {
        page = mPage;
        pt1 = page.getViewById("pt1");
        pt2 = page.getViewById("pt2");
        pt3 = page.getViewById("pt3");
        pt4 = page.getViewById("pt4");
        pt5 = page.getViewById("pt5");
        pt1.translateY = translateY;
        pt2.translateY = translateY;
        pt3.translateY = translateY;
        pt4.translateY = translateY;
        pt5.translateY = translateY;
        currentView = pt1;
    }
}
exports.trigger1 = trigger1;
function trigger2(ele) {
    if (!isEleAbove0) {
        isEleAbove0 = -ele > 0;
        if (isEleAbove0) {
            fadeaway(pt2);
        }
    }
    else if (-ele > 40) {
        pt5.opacity = 1;
    }
    else {
        pt5.opacity = 0;
    }
}
exports.trigger2 = trigger2;
function trigger3(az) {
    if (!isPressed) {
        fadeaway(pt3);
        isEleAbove0 = true;
    }
    oldAz = az;
    isPressed = true;
}
exports.trigger3 = trigger3;
function trigger4(az) {
    if (!largeDeltaAz && isPressed) {
        largeDeltaAz = Math.abs(oldAz - az) > 20;
        if (largeDeltaAz) {
            end(pt3, pt4);
        }
    }
}
exports.trigger4 = trigger4;
function fadeaway(newView) {
    return currentView.animate({
        opacity: 0,
        duration: 1000
    }).then(function () {
        newView.animate({
            opacity: 1,
            duration: 1000
        });
        currentView = newView;
    });
}
function end(oldView, newView) {
    oldView.animate({
        opacity: 0,
        duration: 1000
    }).then(function () {
        newView.animate({
            opacity: 1,
            duration: 2000
        }).then(function () {
            newView.animate({
                opacity: 0,
                duration: 2000
            });
            currentView = newView;
        });
    });
}
function hide(view) {
    view.animate({
        opacity: 0,
        duration: 1000
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5zdHJ1Y3Rpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaW5zdHJ1Y3Rpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbUNBQXFDO0FBRXJDLElBQUksT0FBTyxHQUFZLEtBQUssQ0FBQztBQUM3QixJQUFJLFdBQVcsR0FBWSxLQUFLLENBQUM7QUFDakMsSUFBSSxTQUFTLEdBQVksS0FBSyxDQUFDO0FBQy9CLElBQUksWUFBWSxHQUFZLEtBQUssQ0FBQztBQUNsQyxJQUFJLEtBQUssR0FBVyxDQUFDLENBQUM7QUFFdEIsSUFBSSxJQUFJLENBQUM7QUFDVCxJQUFJLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7QUFDNUIsSUFBSSxXQUFXLENBQUM7QUFDaEIsSUFBTSxVQUFVLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsWUFBWSxHQUFHLENBQUMsR0FBRSxRQUFRLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUM7QUFFakcsa0JBQXlCLEtBQUs7SUFDNUIsRUFBRSxDQUFBLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ1osSUFBSSxHQUFHLEtBQUssQ0FBQztRQUNiLEdBQUcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzlCLEdBQUcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzlCLEdBQUcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzlCLEdBQUcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzlCLEdBQUcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzlCLEdBQUcsQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO1FBQzVCLEdBQUcsQ0FBQyxVQUFVLEdBQUcsVUFBVSxD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ZnJvbSBcInBsYXRmb3JtXCI7XG5cbmxldCBpc1N0YXJ0OiBib29sZWFuID0gZmFsc2U7XG5sZXQgaXNFbGVBYm92ZTA6IGJvb2xlYW4gPSBmYWxzZTtcbmxldCBpc1ByZXNzZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbmxldCBsYXJnZURlbHRhQXo6IGJvb2xlYW4gPSBmYWxzZTtcbmxldCBvbGRBejogbnVtYmVyID0gMDtcblxubGV0IHBhZ2U7XG5sZXQgcHQxLCBwdDIsIHB0MywgcHQ0LCBwdDU7XG5sZXQgY3VycmVudFZpZXc7XG5jb25zdCB0cmFuc2xhdGVZID0gcGxhdGZvcm0uc2NyZWVuLm1haW5TY3JlZW4uaGVpZ2h0UGl4ZWxzIC8gOCAvcGxhdGZvcm0uc2NyZWVuLm1haW5TY3JlZW4uc2NhbGU7XG5cbmV4cG9ydCBmdW5jdGlvbiB0cmlnZ2VyMShtUGFnZSkge1xuICBpZighaXNTdGFydCkge1xuICAgIHBhZ2UgPSBtUGFnZTtcbiAgICBwdDEgPSBwYWdlLmdldFZpZXdCeUlkKFwicHQxXCIpO1xuICAgIHB0MiA9IHBhZ2UuZ2V0Vmlld0J5SWQoXCJwdDJcIik7XG4gICAgcHQzID0gcGFnZS5nZXRWaWV3QnlJZChcInB0M1wiKTtcbiAgICBwdDQgPSBwYWdlLmdldFZpZXdCeUlkKFwicHQ0XCIpO1xuICAgIHB0NSA9IHBhZ2UuZ2V0Vmlld0J5SWQoXCJwdDVcIik7XG4gICAgcHQxLnRyYW5zbGF0ZVkgPSB0cmFuc2xhdGVZO1xuICAgIHB0Mi50cmFuc2xhdGVZID0gdHJhbnNsYXRlWTtcbiAgICBwdDMudHJhbnNsYXRlWSA9IHRyYW5zbGF0ZVk7XG4gICAgcHQ0LnRyYW5zbGF0ZVkgPSB0cmFuc2xhdGVZO1xuICAgIHB0NS50cmFuc2xhdGVZID0gdHJhbnNsYXRlWTtcbiAgICBjdXJyZW50VmlldyA9IHB0MTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdHJpZ2dlcjIoZWxlKSB7XG4gIGlmKCFpc0VsZUFib3ZlMCkge1xuICAgIGlzRWxlQWJvdmUwID0gLWVsZSA+IDA7XG4gICAgaWYoaXNFbGVBYm92ZTApIHtcbiAgICAgIGZhZGVhd2F5KHB0Mik7XG4gICAgfVxuICB9IGVsc2UgaWYoLWVsZSA+IDQwKSB7XG4gICAgcHQ1Lm9wYWNpdHkgPSAxO1xuICB9IGVsc2Uge1xuICAgIHB0NS5vcGFjaXR5ID0gMDtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdHJpZ2dlcjMoYXopIHtcbiAgaWYoIWlzUHJlc3NlZCkge1xuICAgIGZhZGVhd2F5KHB0Myk7XG4gICAgaXNFbGVBYm92ZTAgPSB0cnVlO1xuICB9XG4gIG9sZEF6ID0gYXo7XG4gIGlzUHJlc3NlZCA9IHRydWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0cmlnZ2VyNChheikge1xuICBpZighbGFyZ2VEZWx0YUF6ICYmIGlzUHJlc3NlZCl7XG4gICAgbGFyZ2VEZWx0YUF6ID0gTWF0aC5hYnMob2xkQXotYXopID4gMjA7XG4gICAgaWYobGFyZ2VEZWx0YUF6KSB7XG4gICAgICBlbmQocHQzLCBwdDQpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBmYWRlYXdheShuZXdWaWV3KSB7XG4gIHJldHVybiBjdXJyZW50Vmlldy5hbmltYXRlKHtcbiAgICBvcGFjaXR5OiAwLFxuICAgIGR1cmF0aW9uOiAxMDAwXG4gIH0pLnRoZW4oKCk9PntcbiAgICBuZXdWaWV3LmFuaW1hdGUoe1xuICAgICAgb3BhY2l0eTogMSxcbiAgICAgIGR1cmF0aW9uOiAxMDAwXG4gICAgfSk7XG4gICAgY3VycmVudFZpZXcgPSBuZXdWaWV3O1xuICB9KTtcbn1cblxuZnVuY3Rpb24gZW5kKG9sZFZpZXcsIG5ld1ZpZXcpIHtcbiAgb2xkVmlldy5hbmltYXRlKHtcbiAgICBvcGFjaXR5OiAwLFxuICAgIGR1cmF0aW9uOiAxMDAwXG4gIH0pLnRoZW4oKCkgPT57XG4gICAgbmV3Vmlldy5hbmltYXRlKHtcbiAgICAgIG9wYWNpdHk6IDEsXG4gICAgICBkdXJhdGlvbjogMjAwMFxuICAgIH0pLnRoZW4oKCkgPT4ge1xuICAgICAgbmV3Vmlldy5hbmltYXRlKHtcbiAgICAgICAgb3BhY2l0eTowLFxuICAgICAgICBkdXJhdGlvbjogMjAwMFxuICAgICAgfSk7XG4gICAgICBjdXJyZW50VmlldyA9IG5ld1ZpZXc7XG4gICAgfSk7XG4gIH0pO1xufVxuZnVuY3Rpb24gaGlkZSh2aWV3KSB7XG4gIHZpZXcuYW5pbWF0ZSh7XG4gICAgb3BhY2l0eTogMCxcbiAgICBkdXJhdGlvbjogMTAwMFxuICB9KTtcbn1cbiJdfQ==