"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var platform = require("platform");
var page;
var ele = [];
var maxEle;
var minEle;
var timer;
var prevIndex;
var smoothingRange;
var width = platform.screen.mainScreen.widthPixels / 360 / platform.screen.mainScreen.scale; // in dp
var maxHeight = platform.screen.mainScreen.heightPixels / 8 / platform.screen.mainScreen.scale; // in dp
function initGraph(myPage) {
    console.log("Entering initGraph");
    page = myPage;
    maxEle = 60;
    minEle = 0;
    timer = 10;
    smoothingRange = 20;
    page.getViewById("graph").height = maxHeight;
    // const targetline = page.getViewById("ltarget");
    // targetline.height = width;
    for (var i = 0; i < 360; i++) {
        console.log("dealing with: " + i);
        ele.push((maxEle + minEle) / 2);
        var heightPercent = (ele[i] - minEle) / (maxEle - minEle);
        page.getViewById("l" + i).height = maxHeight;
    }
}
exports.initGraph = initGraph;
function updateGraph(azimuth, elevation) {
    var az = Math.floor(azimuth) + 180;
    ele[az] = -elevation < minEle ? minEle : -elevation > maxEle ? maxEle : -elevation;
    var currentView = page.getViewById("l" + az);
    currentView.height = maxHeight * ele2Percent(ele[az]);
    var dif = az - prevIndex;
    if (Math.abs(dif) > 1 && Math.abs(dif) < smoothingRange) {
        var start = void 0, end = void 0;
        if (dif > 0) {
            start = prevIndex + 1;
            end = az;
        }
        else {
            start = az + 1;
            end = prevIndex;
        }
        for (var i = start; i < end; i++) {
            ele[i] = ele[start - 1] + (i - start + 1) / (dif - 1) * (ele[az] - ele[prevIndex]);
            page.getViewById("l" + (i)).height = maxHeight * ele2Percent(ele[i]);
        }
    }
    prevIndex = az;
}
exports.updateGraph = updateGraph;
function ele2Percent(elevation) {
    return (elevation - minEle) / (maxEle - minEle);
}
function onExit() {
}
exports.onExit = onExit;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJjaGFydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1DQUFxQztBQUlyQyxJQUFJLElBQUksQ0FBQztBQUNULElBQU0sR0FBRyxHQUFhLEVBQUUsQ0FBQztBQUV6QixJQUFJLE1BQWMsQ0FBQztBQUNuQixJQUFJLE1BQWMsQ0FBQztBQUNuQixJQUFJLEtBQWEsQ0FBQztBQUNsQixJQUFJLFNBQWlCLENBQUM7QUFDdEIsSUFBSSxjQUFzQixDQUFDO0FBRTNCLElBQU0sS0FBSyxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLFdBQVcsR0FBRyxHQUFHLEdBQUUsUUFBUSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUMsUUFBUTtBQUN0RyxJQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxZQUFZLEdBQUcsQ0FBQyxHQUFFLFFBQVEsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDLFFBQVE7QUFFekcsbUJBQTBCLE1BQU07SUFDOUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO0lBQ2xDLElBQUksR0FBRyxNQUFNLENBQUM7SUFDZCxNQUFNLEdBQUcsRUFBRSxDQUFDO0lBQ1osTUFBTSxHQUFHLENBQUMsQ0FBQztJQUNYLEtBQUssR0FBRyxFQUFFLENBQUM7SUFDWCxjQUFjLEdBQUcsRUFBRSxDQUFDO0lBQ3BCLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQztJQUM3QyxrREFBa0Q7SUFDbEQsNkJBQTZCO0lBRTdCLEdBQUcsQ0FBQSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7UUFDNUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsR0FBRSxDQUFDLENBQUMsQ0FBQztRQUNqQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxHQUFFLE1BQU0sQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzdCLElBQU0sYUFBYSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxHQUFDLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxDQUFDO1FBQzFELElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxHQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxTQUFTLENBQUM7SUFDN0MsQ0FBQztBQUNILENBQUM7QUFqQkQsOEJBaUJDO0FBRUQscUJBQTRCLE9BQU8sRUFBRSxTQUFTO0lBQzVDLElBQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBQ3JDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLFNBQVMsR0FBQyxNQUFNLEdBQUUsTUFBTSxHQUFFLENBQUMsU0FBUyxHQUFDLE1BQU0sR0FBRSxNQUFNLEdBQUUsQ0FBQyxTQUFTLENBQUM7SUFFM0UsSUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLEdBQUMsRUFBRSxDQUFDLENBQUM7SUFDN0MsV0FBVyxDQUFDLE1BQU0sR0FBRyxTQUFTLEdBQUcsV0FBVyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBRXRELElBQU0sR0FBRyxHQUFHLEVBQUUsR0FBQyxTQUFTLENBQUM7SUFDekIsRUFBRSxDQUFBLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxjQUFjLENBQUMsQ0FBQyxDQUFDO1FBQ3ZELElBQUksS0FBSyxTQUFBLEVBQUUsR0FBRyxTQUFBLENBQUM7UUFDZixFQUFFLENBQUEsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNYLEtBQUssR0FBRyxTQUFTLEdBQUcsQ0FBQyxDQUFDO1lBQ3RCLEdBQUcsR0FBRyxFQUFFLENBQUM7UUFDWCxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixLQUFLLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUNmLEdBQUcsR0FBRyxTQUFTLENBQUM7UUFDbEIsQ0FBQztRQUNELEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUssRUFBRSxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7WUFDakMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxLQUFLLEdBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsS0FBSyxHQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxHQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQzNFLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUcsU0FBUyxHQUFHLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNyRSxDQUFDO0lBQ0gsQ0FBQztJQUNELFNBQVMsR0FBRyxFQUFFLENBQUM7QUFDakIsQ0FBQztBQXZCRCxrQ0F1QkM7QUFFRCxxQkFBcUIsU0FBUztJQUM1QixNQUFNLENBQUMsQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLEdBQUMsQ0FBQyxNQUFNLEdBQUMsTUFBTSxDQUFDLENBQUM7QUFDOUMsQ0FBQztBQUVEO0FBQ0EsQ0FBQztBQURELHdCQUNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgcGxhdGZvcm0gZnJvbSBcInBsYXRmb3JtXCI7XHJcbmltcG9ydCAqIGFzIGtub3duQ29sb3JzIGZyb20gXCJjb2xvci9rbm93bi1jb2xvcnNcIjtcclxuaW1wb3J0ICogYXMgSW1hZ2VNb2R1bGUgZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvdWkvaW1hZ2VcIjtcclxuXHJcbmxldCBwYWdlO1xyXG5jb25zdCBlbGU6IG51bWJlcltdID0gW107XHJcblxyXG5sZXQgbWF4RWxlOiBudW1iZXI7XHJcbmxldCBtaW5FbGU6IG51bWJlcjtcclxubGV0IHRpbWVyOiBudW1iZXI7XHJcbmxldCBwcmV2SW5kZXg6IG51bWJlcjtcclxubGV0IHNtb290aGluZ1JhbmdlOiBudW1iZXI7XHJcblxyXG5jb25zdCB3aWR0aCA9IHBsYXRmb3JtLnNjcmVlbi5tYWluU2NyZWVuLndpZHRoUGl4ZWxzIC8gMzYwIC9wbGF0Zm9ybS5zY3JlZW4ubWFpblNjcmVlbi5zY2FsZTsgLy8gaW4gZHBcclxuY29uc3QgbWF4SGVpZ2h0ID0gcGxhdGZvcm0uc2NyZWVuLm1haW5TY3JlZW4uaGVpZ2h0UGl4ZWxzIC8gOCAvcGxhdGZvcm0uc2NyZWVuLm1haW5TY3JlZW4uc2NhbGU7IC8vIGluIGRwXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaW5pdEdyYXBoKG15UGFnZSkge1xyXG4gIGNvbnNvbGUubG9nKFwiRW50ZXJpbmcgaW5pdEdyYXBoXCIpO1xyXG4gIHBhZ2UgPSBteVBhZ2U7XHJcbiAgbWF4RWxlID0gNjA7XHJcbiAgbWluRWxlID0gMDtcclxuICB0aW1lciA9IDEwO1xyXG4gIHNtb290aGluZ1JhbmdlID0gMjA7XHJcbiAgcGFnZS5nZXRWaWV3QnlJZChcImdyYXBoXCIpLmhlaWdodCA9IG1heEhlaWdodDtcclxuICAvLyBjb25zdCB0YXJnZXRsaW5lID0gcGFnZS5nZXRWaWV3QnlJZChcImx0YXJnZXRcIik7XHJcbiAgLy8gdGFyZ2V0bGluZS5oZWlnaHQgPSB3aWR0aDtcclxuXHJcbiAgZm9yKGxldCBpID0gMDsgaSA8IDM2MDsgaSsrKSB7XHJcbiAgICBjb25zb2xlLmxvZyhcImRlYWxpbmcgd2l0aDogXCIrIGkpO1xyXG4gICAgZWxlLnB1c2goKG1heEVsZSsgbWluRWxlKS8yKTtcclxuICAgIGNvbnN0IGhlaWdodFBlcmNlbnQgPSAoZWxlW2ldIC0gbWluRWxlKS8obWF4RWxlIC0gbWluRWxlKTtcclxuICAgIHBhZ2UuZ2V0Vmlld0J5SWQoXCJsXCIraSkuaGVpZ2h0ID0gbWF4SGVpZ2h0O1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUdyYXBoKGF6aW11dGgsIGVsZXZhdGlvbikge1xyXG4gIGNvbnN0IGF6ID0gTWF0aC5mbG9vcihhemltdXRoKSArIDE4MDtcclxuICBlbGVbYXpdID0gLWVsZXZhdGlvbjxtaW5FbGU/IG1pbkVsZTogLWVsZXZhdGlvbj5tYXhFbGU/IG1heEVsZTogLWVsZXZhdGlvbjtcclxuXHJcbiAgY29uc3QgY3VycmVudFZpZXcgPSBwYWdlLmdldFZpZXdCeUlkKFwibFwiK2F6KTtcclxuICBjdXJyZW50Vmlldy5oZWlnaHQgPSBtYXhIZWlnaHQgKiBlbGUyUGVyY2VudChlbGVbYXpdKTtcclxuXHJcbiAgY29uc3QgZGlmID0gYXotcHJldkluZGV4O1xyXG4gIGlmKE1hdGguYWJzKGRpZikgPiAxICYmIE1hdGguYWJzKGRpZikgPCBzbW9vdGhpbmdSYW5nZSkge1xyXG4gICAgbGV0IHN0YXJ0LCBlbmQ7XHJcbiAgICBpZihkaWYgPiAwKSB7XHJcbiAgICAgIHN0YXJ0ID0gcHJldkluZGV4ICsgMTtcclxuICAgICAgZW5kID0gYXo7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBzdGFydCA9IGF6ICsgMTtcclxuICAgICAgZW5kID0gcHJldkluZGV4O1xyXG4gICAgfVxyXG4gICAgZm9yIChsZXQgaSA9IHN0YXJ0OyBpIDwgZW5kOyBpKyspIHtcclxuICAgICAgZWxlW2ldID0gZWxlW3N0YXJ0LTFdICsgKGkgLSBzdGFydCsxKSAvIChkaWYtMSkgKiAoZWxlW2F6XS1lbGVbcHJldkluZGV4XSk7XHJcbiAgICAgIHBhZ2UuZ2V0Vmlld0J5SWQoXCJsXCIrKGkpKS5oZWlnaHQgPSBtYXhIZWlnaHQgKiBlbGUyUGVyY2VudChlbGVbaV0pO1xyXG4gICAgfVxyXG4gIH1cclxuICBwcmV2SW5kZXggPSBhejtcclxufVxyXG5cclxuZnVuY3Rpb24gZWxlMlBlcmNlbnQoZWxldmF0aW9uKSB7XHJcbiAgcmV0dXJuIChlbGV2YXRpb24gLSBtaW5FbGUpLyhtYXhFbGUtbWluRWxlKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG9uRXhpdCgpIHtcclxufVxyXG4iXX0=